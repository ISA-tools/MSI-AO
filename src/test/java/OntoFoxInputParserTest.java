/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Before;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertTrue;

public class OntoFoxInputParserTest {

    private OntoFoxInputParser parser = null;
    @Before
    public void setUp() throws IOException {
        parser = new OntoFoxInputParser(getClass().getResource("/ontofoxInputUO.txt").getPath());
        parser.parse();
    }

    @Test
    public void testParsingURI(){
        assertTrue("paser.getURI() should not be null", parser.getURI() !=null );
        assertTrue("paser.getURI() has specific value", parser.getURI().equals("http://purl.obolibrary.org/obo/MSI_AO_UO_imports.owl") );
    }

    @Test
    public void testParsingSourceOntology() throws IOException {
        assertTrue("paser.getSourceOntology() should not be null", parser.getSourceOntology() !=null );
        System.out.println(parser.getSourceOntology());
        assertTrue("paser.getSourceOntolgy() has specific value", parser.getSourceOntology().equals("UO") );
    }

    @Test
    public void testParsingLowerIRIs() throws IOException {
        assertTrue("paser.getLowerIRIs() should not be null", parser.getLowerIRIs() !=null );
        System.out.println(parser.getLowerIRIs().size());
        assertTrue("paser.getLowerIRIs() has specific value", parser.getLowerIRIs().size()==18 );
    }

    @Test
    public void testParsingUpperRIs() throws IOException {
        assertTrue("paser.getUpperIRIs() should not be null", parser.getUpperIRIs() !=null );
        assertTrue("paser.getUpperIRIs() has specific value", parser.getUpperIRIs().size()==1 );
    }

    @Test
    public void testParsingSourceRetrievalSetting() throws IOException {
        assertTrue("paser.getSourceRetrievalSetting() should not be null", parser.getSourceRetrievalSetting() !=null );
        assertTrue("paser.getSourceRetrievalSetting() has specific value", parser.getSourceRetrievalSetting().equals("includeNoIntermediates"));
    }


    @Test
    public void testParsingSourceAnnotationURIs() throws IOException {
        assertTrue("paser.getSourceAnnotationURIs() should not be null", parser.getSourceAnnotationURIs() !=null );
        assertTrue("paser.getSourceAnnotationURIs() has specific value", parser.getSourceAnnotationURIs().size()==0);
    }

    @Test
    public void testParsingSourceAnnotationSetting() throws IOException {
        assertTrue("paser.getSourceAnnotationSetting() should not be null", parser.getSourceAnnotationSetting() !=null );
        System.out.println(parser.getSourceAnnotationURIs());
        assertTrue("paser.getSourceAnnotationSetting() has specific value", parser.getSourceAnnotationSetting().equals("includeAllAnnotationProperties"));
    }

}
